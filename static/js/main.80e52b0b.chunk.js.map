{"version":3,"sources":["images/logo.png","images/Landscape.jpg","logo.svg","components/Header.js","components/NavbarPage.js","components/Transactions.js","components/Freeze.js","App.js","serviceWorker.js","index.js","images/profilepicture.png"],"names":["module","exports","__webpack_require__","p","Header","NavbarPage","Transactions","buttonStyle","cardShadow","boxShadow","textSize","fontSize","color","textSizeFreezeInfo","checkingAmt","savingsAmt","creditAmt","yearJoin","accountStatus","Freeze","react_default","a","createElement","className","NavbarBrand","classname","style","href","Button","variant","Container","Row","Col","xs","Card","Body","ListGroup","ListGroupItem","sm","md","lg","xlg","size","App","components_Freeze","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80e52b0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0141435b.png\";","module.exports = __webpack_public_path__ + \"static/media/Landscape.c81b225e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {Image} from 'react-bootstrap';\r\nimport HeaderImage from '../images/Landscape.jpg';\r\n\r\nconst imageSize = {\r\n    height:'100vh',\r\n    width:'auto'\r\n\r\n}\r\nfunction Header()\r\n{\r\n    return(\r\n        <div className = \"Header\">\r\n              <Image  fluid style = {imageSize} src = {HeaderImage}\r\n              \r\n              \r\n              \r\n              \r\n              />\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {Navbar, NavbarBrand} from 'react-bootstrap';\r\n\r\nfunction NavbarPage() {\r\n    return(\r\n<div className = \"NavbarPage\">\r\n        <Navbar fixed-top bg = \"light\" variant = \"light\">\r\n          <NavbarBrand >\r\n            Welcome to the page!\r\n          </NavbarBrand>\r\n        </Navbar>\r\n</div>\r\n      \r\n     \r\n    );\r\n}\r\n\r\nexport default NavbarPage","import React from 'react'\r\nimport {Badge, Button, Card, CardBody, Container, Image, Navbar, NavbarBrand, Row, Col, ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport Profile from '../components/Profile';\r\nimport profileImage from '../images/profilepicture.png';\r\nimport {Scrollbar} from \"react\";\r\n\r\nconst cardStyle = {\r\n  \r\n  \r\n        \r\n}\r\nconst textFlex = {\r\n display:\"flex\",\r\n flexDirection:\"column\",\r\n justifyContent:\"center\",\r\n alignItems:\"center\"\r\n}\r\nconst buttonStyle = {\r\n \r\n}\r\nconst containerStyle = {\r\n\r\n\r\n\r\n}\r\nconst ImageSize = {\r\nheight:\"10em\",\r\nwidth:\"auto\"\r\n}\r\n\r\nconst textColor = {\r\n color:\"white\"\r\n}\r\nconst cardShadow = {\r\n\r\n boxShadow:\"5px 5px 5px 5px\"\r\n}\r\nconst textSize = {\r\n fontSize : \"1rem\"\r\n}\r\nconst scrollClass = {\r\nheight:\"150px\",\r\noverflowy:\"scroll\"\r\n}\r\n\r\n\r\n\r\nlet checkingAmt = 400;\r\nlet savingsAmt = 3423.23;\r\nlet creditAmt = 223.33;\r\nlet notificationsAmt = 11;\r\nlet yearJoin = 2015;\r\n\r\n\r\nfunction Transactions()\r\n{\r\n    return(\r\n        <div className = \"Transactions\">\r\n           \r\n\r\n\r\n\r\n        <div className = \"navbar\">\r\n                <NavbarBrand>\r\n                    <a classname = \"lead\" style = {textColor} href = \"/\">PathWays Banking,  <p style = {textSize} className = \"lead\">Member since {yearJoin}</p></a>\r\n                        \r\n                </NavbarBrand>\r\n                    <div className = \"navbar-nav\">\r\n                    <Button variant = \"dark\">Sign Out</Button>\r\n                        \r\n                    </div>\r\n        </div>\r\n   \r\n   \r\n\r\n\r\n            <Container className = \"ContainerMain\">\r\n                <Row>\r\n                    <Col xs = \"12\">\r\n                        <Card style = {cardShadow}>\r\n                            <Card.Body>\r\n                                <Container>\r\n                                    <Row>\r\n                                        \r\n                                            <Col>\r\n                                            <Image  style = {ImageSize} src = {profileImage}></Image>\r\n                                            <br/>\r\n                                            <br/>\r\n                                            \r\n                                            <h3 className = \"lead\">Welcome Back, Salvador! {/*javascript name goes here */}</h3>\r\n                                           \r\n                                           \r\n                                            </Col>\r\n                                        \r\n                                            <Col >\r\n                                            <h4 className = \"lead\">Accounts</h4>\r\n                                            <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Checking:&nbsp; $&nbsp;{checkingAmt}{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Savings:&nbsp; $&nbsp;{savingsAmt}{/*javascript name goes here */}</h4>\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Credit:&nbsp; $&nbsp;{creditAmt}{/*javascript name goes here */}</h4>\r\n                                                </ListGroupItem>\r\n                                            </ListGroup>\r\n                                            </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col >\r\n                        <Card style = {cardShadow}>\r\n                            <Card.Body>\r\n                                <Container >\r\n                                    <Row>\r\n\r\n                                       <Container>\r\n                                          \r\n                                             \r\n \r\n                                              \r\n                                                <ListGroup className = \"scrollClass\">\r\n{/*use of ids */}\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Type:&nbsp;Gas Transaction:&nbsp;Transfer from Checking to Savings{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n\r\n                                                </ListGroup>\r\n\r\n                                                  \r\n                                            \r\n\r\n                                        \r\n                                          \r\n                                       </Container>\r\n\r\n            \r\n                                         <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"12\" lg = \"12\" xlg = \"12\">                                    \r\n                                        <Button size=\"lg\" style = {buttonStyle} variant = \"primary\">Home</Button>\r\n                                        \r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n          \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Transactions\r\n","import React from 'react'\r\nimport {Badge, Button, Card, CardBody, Container, Image, Input, Navbar, NavbarBrand, Row, Col, ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport Profile from '../components/Profile';\r\nimport profileImage from '../images/profilepicture.png';\r\n\r\nconst cardStyle = {\r\n  \r\n  \r\n        \r\n   }\r\nconst textFlex = {\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n}\r\nconst buttonStyle= {\r\n    \r\n}\r\n\r\nconst containerStyle = {\r\n\r\n\r\n\r\n}\r\nconst ImageSize = {\r\n  height:\"10em\",\r\n  width:\"auto\"\r\n}\r\n\r\nconst textColor = {\r\n    color:\"white\"\r\n}\r\nconst cardShadow = {\r\n   \r\n    boxShadow:\"5px 5px 5px 5px\"\r\n}\r\nconst textSize = {\r\n    fontSize : \"2vw\",\r\n    color:\"white\"\r\n}\r\nconst textSizeFreezeInfo = {\r\n    fontSize:\"1.5vw\",\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet checkingAmt = 400;\r\nlet savingsAmt = 3423.23;\r\nlet creditAmt = 223.33;\r\nlet notificationsAmt = 11;\r\nlet yearJoin = 2015;\r\nlet accountStatus = \"Unlocked\";\r\nfunction Freeze()\r\n{\r\n    return(\r\n        <div className = \"Balance\">\r\n<div className = \"navbar\">\r\n <NavbarBrand>\r\n        <a classname = \"lead\" style = {textSize} href = \"/\">PathWays Banking,  <p style = {textSize} className = \"lead\">Member since {yearJoin}</p></a>\r\n        \r\n    </NavbarBrand>\r\n<div className = \"navbar-nav\">\r\n     <Button variant = \"dark\">Sign Out</Button>\r\n    \r\n    \r\n    </div>\r\n\r\n</div>\r\n   \r\n   \r\n\r\n\r\n            <Container className = \"ContainerMain\">\r\n                <Row>\r\n                    <Col xs = \"12\">\r\n                        <Card style = {cardShadow}>\r\n                            <Card.Body>\r\n                                <Container>\r\n                                    <Row>\r\n                                        \r\n                                            <Col >\r\n                                            <div   >\r\n                                            <p className = \"lead\" style = {textSizeFreezeInfo} >\r\n                                                Lost your card? You have the ability to lock your account. \r\n                                                This bank is insured by the FDIC up to a million dollars. \r\n                                                Call this number 1-800-876-9083 for any questions regarding your account. \r\n                                            </p>\r\n                                            <br/>\r\n                                                \r\n                                                    \r\n                                                \r\n                                            <h4>Status:&nbsp; {accountStatus}</h4>\r\n                                            </div>\r\n                                           \r\n                                            \r\n                                            \r\n                                            \r\n                                           \r\n                                           \r\n                                            </Col>\r\n                                        \r\n                                            <Col>\r\n                                            <h4 style = {textSizeFreezeInfo} className = \"lead\">Accounts</h4>\r\n                                            <ListGroup >\r\n                                                <ListGroupItem>\r\n                                                <h4 style = {textSizeFreezeInfo} className = \"lead\">Checking:&nbsp; $&nbsp;{checkingAmt}{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 style = {textSizeFreezeInfo} className = \"lead\">Savings:&nbsp; $&nbsp;{savingsAmt}{/*javascript name goes here */}</h4>\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 style = {textSizeFreezeInfo} className = \"lead\">Credit:&nbsp; $&nbsp;{creditAmt}{/*javascript name goes here */}</h4>\r\n                                                </ListGroupItem>\r\n                                            </ListGroup>\r\n                                            </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col >\r\n                        <Card style = {cardShadow} >\r\n                            <Card.Body>\r\n                                <Container >\r\n                                    <Row>\r\n\r\n                                       \r\n\r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"6\" lg = \"6\" xlg = \"6\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"primary\">Freeze Account</Button>                                      \r\n                                        </Col>\r\n\r\n  \r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"6\" lg = \"6\" xlg = \"6\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"primary\">Unfreeze Account</Button>\r\n                                        </Col>\r\n\r\n                                       \r\n\r\n                                       \r\n                                         \r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"12\" lg = \"12\" xlg = \"12\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"primary\">Home</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n          \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Freeze","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\nimport JumboTron from './components/JumboTron';\nimport Keypad from './components/Keypad';\nimport Profile from './components/Profile';\nimport Header from './components/Header';\nimport NavbarPage from './components/NavbarPage';\nimport Login from './components/Login';\nimport Balance from './components/Balance';\nimport Transactions from './components/Transactions';\nimport Freeze from './components/Freeze';\nimport Signout from './components/Signout';\nimport Transfer from './components/Transfer';\nimport Account from './components/Account';\nimport {Router, Route, BrowserRouter, Link} from \"react-router-dom\";\n\n\n\n\n\n\nfunction App() {\n\n  return (\n   \n    <div className=\"App\">\n        \n  <Freeze/>\n\n    </div>\n\n\n   \n  \n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profilepicture.b6681619.png\";"],"sourceRoot":""}