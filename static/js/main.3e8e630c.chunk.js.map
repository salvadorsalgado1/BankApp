{"version":3,"sources":["images/profilepicture.png","images/Landscape.jpg","images/logo.png","logo.svg","components/NavbarPage.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavbarPage","cardContainer","width","height","paddingTop","textColor","color","backgroundCard","opacity","boxShadow","marginImage","marginBottom","spacingTab","Login","react_default","a","createElement","className","Container","style","Row","Col","Card","CardGroup","Body","Img","variant","src","logo","Tabs","defaultActiveKey","Tab","eventKey","title","Title","Form","Group","controlId","Control","type","placeholder","Button","block","App","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wVCiBzBC,4ECPTC,EAAgB,CAEtBC,MAAM,OACNC,OAAO,OACPC,WAAW,OAILC,EAAY,CACdC,MAAM,QAGJC,EAAiB,CACnBC,QAAQ,KACRC,UAAU,mBAGRC,EAAc,CAChBC,aAAa,QAEXC,EAAa,CACfD,aAAa,QA6GFE,MA1Gf,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAGzBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWD,UAAY,YAAaE,MAASlB,GACzCa,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMH,MAASZ,GACXO,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACM,EAAA,EAAKE,KAAN,KACIV,EAAAC,EAAAC,cAACM,EAAA,EAAKG,IAAN,CAAUN,MAAST,EAAagB,QAAQ,MAAMC,IAAOC,MAErDd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMV,MAASP,EAAYkB,iBAAmB,SAC1ChB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKC,SAAW,QAAQC,MAAQ,WAEhCnB,EAAAC,EAAAC,cAACM,EAAA,EAAKY,MAAN,CAAYf,MAASd,EAAWY,UAAY,QAA5C,qBAEIH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KAEIrB,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAY,uBACpBvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACmB,EAAA,EAAKG,QAAN,CAAcC,KAAO,QAAQC,YAAc,cAM3D1B,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAY,uBACpBvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACmB,EAAA,EAAKG,QAAN,CAAcC,KAAO,WAAWC,YAAc,iBAM9D1B,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,KACItB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQC,OAAK,EAAChB,QAAU,mBAAxB,eASxBZ,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKC,SAAU,SAASC,MAAQ,WAC5BnB,EAAAC,EAAAC,cAACM,EAAA,EAAKY,MAAN,CAAYf,MAASd,EAAWY,UAAY,QAA5C,oBACIH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAY,uBACpBvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACmB,EAAA,EAAKG,QAAN,CAAcC,KAAO,QAAQC,YAAc,yBAO3D1B,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAY,uBACpBvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACmB,EAAA,EAAKG,QAAN,CAAcC,KAAO,WAAWC,YAAc,4BAM9D1B,EAAAC,EAAAC,cAACmB,EAAA,EAAKC,MAAN,KACItB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQC,OAAK,EAAChB,QAAU,mBAAxB,iCC/FzCiB,MAVf,WACE,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEnBH,EAAAC,EAAAC,cAAC4B,EAAD,eCHoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3e8e630c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepicture.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/Landscape.c81b225e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0141435b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {Navbar, NavbarBrand} from 'react-bootstrap';\r\n\r\nfunction NavbarPage() {\r\n    return(\r\n<div className = \"NavbarPage\">\r\n        <Navbar fixed-top bg = \"light\" variant = \"light\">\r\n          <NavbarBrand >\r\n            Welcome to the page!\r\n          </NavbarBrand>\r\n        </Navbar>\r\n</div>\r\n      \r\n     \r\n    );\r\n}\r\n\r\nexport default NavbarPage","import React from 'react';\r\nimport {Form, FormGroup, FormLabel, InputGroup, FormControl, \r\n    Container, Row, Col, Card, CardGroup, Button, CardBody, \r\n    CardTitle, CardImg, Image, Tabs, Tab\r\n\r\n} from 'react-bootstrap';\r\n\r\nimport { generateKeyPair } from 'crypto';\r\nimport logo from '../images/logo.png';\r\n\r\nconst cardContainer = {\r\n\r\nwidth:\"70vw\",\r\nheight:\"40vh\",\r\npaddingTop:\"2vh\"\r\n\r\n\r\n}\r\nconst textColor = {\r\n    color:\"gray\"\r\n   \r\n}\r\nconst backgroundCard = {\r\n    opacity:\".9\",\r\n    boxShadow:\"5px 5px 5px 5px\",\r\n   \r\n}\r\nconst marginImage = {\r\n    marginBottom:\"20px\"\r\n}\r\nconst spacingTab = {\r\n    marginBottom:\"10px\"\r\n}\r\n\r\nfunction Login()\r\n{\r\n    return(\r\n        <div className = \"Login\">\r\n\r\n                                                     \r\n<Container className = \"container\"  style = {cardContainer}>\r\n    <Row>\r\n        <Col>\r\n            <Card style = {backgroundCard}>\r\n                <CardGroup>\r\n                    <Card.Body>\r\n                        <Card.Img style = {marginImage} variant=\"top\" src = {logo} />\r\n                                      \r\n                        <Tabs style = {spacingTab} defaultActiveKey = \"First\">\r\n                            <Tab eventKey = \"First\" title = \"Sign In\">\r\n\r\n                            <Card.Title style = {textColor} className = \"lead\">Already a Member?</Card.Title>\r\n\r\n                                <Form>\r\n\r\n                                    <Form.Group controlId = \"formHorizontalEmail\">\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col>        \r\n                                                    <Form.Control type = \"email\" placeholder = \"Email\" />\r\n                                                </Col>                                                       \r\n                                            </Row>\r\n                                        </Container>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId = \"formHorizontalEmail\">\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Control type = \"password\" placeholder = \"Password\"/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Container>                 \r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Button block variant = \"outline-primary\">Login</Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </Form.Group>\r\n                                        \r\n                                </Form>\r\n                                                                    \r\n                            </Tab>\r\n                            <Tab eventKey= \"Second\" title = \"Sign Up\">\r\n                                <Card.Title style = {textColor} className = \"lead\">Become a Member!</Card.Title>\r\n                                    <Form>\r\n                                        <Form.Group controlId = \"formHorizontalEmail\">\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>                                                             \r\n                                                        <Form.Control type = \"email\" placeholder = \"Enter your Email\" />\r\n                                                    </Col>\r\n                                                            \r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId = \"formHorizontalEmail\">\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Control type = \"password\" placeholder = \"Enter your password\"/>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Container>                 \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Button block variant = \"outline-primary\">Create Account</Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Tab>\r\n                        </Tabs>        \r\n                    </Card.Body>\r\n                </CardGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n</Container>\r\n\r\n    \r\n\r\n        \r\n     \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\nimport JumboTron from './components/JumboTron';\nimport Keypad from './components/Keypad';\nimport Profile from './components/Profile';\nimport Header from './components/Header';\nimport NavbarPage from './components/NavbarPage';\nimport Login from './components/Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       \n<Login/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}