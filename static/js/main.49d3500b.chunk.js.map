{"version":3,"sources":["images/profilepicture.png","images/Landscape.jpg","images/logo.png","logo.svg","components/Header.js","components/NavbarPage.js","components/Login.js","components/Balance.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","NavbarPage","Login","buttonStyle","ImageSize","height","width","textColor","color","checkingAmt","savingsAmt","creditAmt","notificationsAmt","Balance","react_default","a","createElement","className","NavbarBrand","style","href","Button","variant","Container","Row","Col","xs","Card","Body","Image","src","profileImage","ListGroup","ListGroupItem","sm","md","lg","xlg","size","Badge","App","components_Balance","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49d3500b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepicture.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/Landscape.c81b225e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0141435b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {Image} from 'react-bootstrap';\r\nimport HeaderImage from '../images/Landscape.jpg';\r\n\r\nconst imageSize = {\r\n    height:'100vh',\r\n    width:'auto'\r\n\r\n}\r\nfunction Header()\r\n{\r\n    return(\r\n        <div className = \"Header\">\r\n              <Image  fluid style = {imageSize} src = {HeaderImage}\r\n              \r\n              \r\n              \r\n              \r\n              />\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {Navbar, NavbarBrand} from 'react-bootstrap';\r\n\r\nfunction NavbarPage() {\r\n    return(\r\n<div className = \"NavbarPage\">\r\n        <Navbar fixed-top bg = \"light\" variant = \"light\">\r\n          <NavbarBrand >\r\n            Welcome to the page!\r\n          </NavbarBrand>\r\n        </Navbar>\r\n</div>\r\n      \r\n     \r\n    );\r\n}\r\n\r\nexport default NavbarPage","import React from 'react';\r\nimport {Form, FormGroup, FormLabel, InputGroup, FormControl, \r\n    Container, Row, Col, Card, CardGroup, Button, CardBody, \r\n    CardTitle, CardImg, Image, Tabs, Tab\r\n\r\n} from 'react-bootstrap';\r\n\r\n\r\nimport logo from '../images/logo.png';\r\n/*\r\nconst cardContainer = {\r\n\r\n width:\"24rem\",\r\n \r\n marginBottom:\"10px\",\r\n \r\n  paddingTop:\"10px\"\r\n\r\n\r\n}\r\nconst textColor = {\r\n    color:\"gray\",\r\n    fontSize:\"1rem\"\r\n   \r\n}\r\nconst backgroundCard = {\r\n    opacity:\".9\",\r\n    boxShadow:\"5px 5px 5px 5px\",\r\n   \r\n}\r\nconst marginImage = {\r\n    marginBottom:\"20px\"\r\n}\r\nconst spacingTab = {\r\n    marginBottom:\"10px\"\r\n} */\r\n\r\n\r\n\r\nconst cardContainer = {\r\n\r\n    width:\"24rem\",\r\n    \r\n    marginBottom:\"10px\",\r\n    \r\n     paddingTop:\"10px\",\r\n     justifyContent:\"center\",\r\n     display:\"flex\",\r\n     flexDirection:\"column\",\r\n     alignItems:\"center\",\r\n     flex:\"1\"\r\n   \r\n   \r\n   }\r\n   const textColor = {\r\n       color:\"gray\",\r\n       fontSize:\"1rem\"\r\n      \r\n   }\r\n   const backgroundCard = {\r\n       opacity:\".9\",\r\n       boxShadow:\"5px 5px 5px 5px\",\r\n       justifyContent:\"center\",\r\n       display:\"flex\",\r\n       flexDirection:\"column\",\r\n       alignItems:\"center\",\r\n       flex:\"1\"\r\n      \r\n   }\r\n   const marginImage = {\r\n       marginBottom:\"20px\",\r\n       justifyContent:\"center\",\r\n       display:\"flex\",\r\n       flexDirection:\"column\",\r\n       alignItems:\"center\",\r\n       flex:\"1\"\r\n   }\r\n   const spacingTab = {\r\n       marginBottom:\"10px\",\r\n       \r\n   }\r\n\r\n\r\n\r\nfunction Login()\r\n{\r\n    return(\r\n        <div className = \"Login\" >\r\n\r\n                                                     \r\n<Container className = \"container\" style = {cardContainer}>\r\n    <Row>\r\n        <Col>\r\n            <Card style = {backgroundCard}>\r\n                <CardGroup>\r\n                    <Card.Body>\r\n                        <Card.Img style = {marginImage} variant=\"top\" src = {logo} />\r\n                                      \r\n                        <Tabs style = {spacingTab} defaultActiveKey = \"First\">\r\n                            <Tab eventKey = \"First\" title = \"Sign In\">\r\n\r\n                            <Card.Title style = {textColor} className = \"lead\">Already a Member?</Card.Title>\r\n\r\n                                <Form>\r\n\r\n                                    <Form.Group controlId = \"formHorizontalEmail\">\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col>        \r\n                                                    <Form.Control type = \"email\" placeholder = \"Email\" />\r\n                                                </Col>                                                       \r\n                                            </Row>\r\n                                        </Container>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId = \"formHorizontalEmail\">\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Control type = \"password\" placeholder = \"Password\"/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Container>                 \r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Container>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Button block variant = \"outline-primary\">Login</Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </Form.Group>\r\n                                        \r\n                                </Form>\r\n                                                                    \r\n                            </Tab>\r\n                            <Tab eventKey= \"Second\" title = \"Sign Up\">\r\n                                <Card.Title style = {textColor} className = \"lead\">Become a Member!</Card.Title>\r\n                                    <Form>\r\n                                        <Form.Group controlId = \"formHorizontalEmail\">\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>                                                             \r\n                                                        <Form.Control type = \"email\" placeholder = \"Enter your Email\" />\r\n                                                    </Col>\r\n                                                            \r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId = \"formHorizontalEmail\">\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Control type = \"password\" placeholder = \"Enter your password\"/>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Container>                 \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group>\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Button block variant = \"outline-primary\">Create Account</Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Tab>\r\n                        </Tabs>        \r\n                    </Card.Body>\r\n                </CardGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n</Container>\r\n\r\n    \r\n\r\n        \r\n     \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport {Badge, Button, Card, CardBody, Container, Image, Navbar, NavbarBrand, Row, Col, ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport Profile from '../components/Profile';\r\nimport profileImage from '../images/profilepicture.png';\r\n\r\nconst cardStyle = {\r\n  \r\n  \r\n        \r\n   }\r\nconst textFlex = {\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n}\r\nconst buttonStyle = {\r\n    \r\n}\r\nconst containerStyle = {\r\n\r\n\r\n\r\n}\r\nconst ImageSize = {\r\n  height:\"10em\",\r\n  width:\"auto\"\r\n}\r\n\r\nconst textColor = {\r\n    color:\"white\"\r\n}\r\nconst buttonNav = {\r\n   \r\n\r\n}\r\n\r\nlet checkingAmt = 4;\r\nlet savingsAmt = 3;\r\nlet creditAmt = 2;\r\nlet notificationsAmt = 7;\r\n\r\n\r\nfunction Balance()\r\n{\r\n    return(\r\n        <div className = \"Balance\">\r\n<div className = \"navbar\">\r\n <NavbarBrand>\r\n        <a style = {textColor} href = \"/\"> Welcome to the page!</a>\r\n        \r\n    </NavbarBrand>\r\n<div className = \"navbar-nav\">\r\n     <Button variant = \"dark\">Sign Out</Button>\r\n    \r\n    \r\n    </div>\r\n\r\n</div>\r\n   \r\n    \r\n\r\n            <Container className = \"ContainerMain\">\r\n                <Row>\r\n                    <Col xs = \"12\">\r\n                        <Card >\r\n                            <Card.Body>\r\n                                <Container>\r\n                                    <Row>\r\n                                        \r\n                                            <Col>\r\n                                            <Image  style = {ImageSize} src = {profileImage}></Image>\r\n                                            <br/>\r\n                                            <br/>\r\n                                            \r\n                                            <h4 className = \"lead\">Welcome Back Salvador! {/*javascript name goes here */}</h4>\r\n                                            \r\n                                           \r\n                                            </Col>\r\n                                        \r\n                                            <Col>\r\n                                            <h4 className = \"lead\">Accounts</h4>\r\n                                            <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Checking:&nbsp; $&nbsp;{checkingAmt}{/*javascript name goes here */}</h4>                                                  \r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Savings:&nbsp; $&nbsp;{savingsAmt}{/*javascript name goes here */}</h4>\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                <h4 className = \"lead\">Credit:&nbsp; $&nbsp;{creditAmt}{/*javascript name goes here */}</h4>\r\n                                                </ListGroupItem>\r\n                                            </ListGroup>\r\n                                            </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col >\r\n                        <Card >\r\n                            <Card.Body>\r\n                                <Container >\r\n                                    <Row>\r\n\r\n                                       \r\n\r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"6\" lg = \"6\" xlg = \"6\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"primary\">Transfer</Button>                                      \r\n                                        </Col>\r\n\r\n  \r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"6\" lg = \"6\" xlg = \"6\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"primary\">Account</Button>\r\n                                        </Col>\r\n\r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"6\" lg = \"6\" xlg = \"6\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"primary\">Freeze</Button>\r\n                                        </Col>\r\n\r\n                                        <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"6\" lg = \"6\" xlg = \"6\">\r\n                                        <Button  size=\"lg\" style = {buttonStyle} variant = \"success\">Sign Out</Button>\r\n                                        </Col>\r\n                                         <Col className = \"ButtonsStyle\" xs = \"12\" sm = \"12\" md = \"12\" lg = \"12\" xlg = \"12\">                                    \r\n                                        <Button size=\"lg\" style = {buttonStyle} variant = \"primary\">Notifications&nbsp;<Badge variant = \"dark\">{notificationsAmt}</Badge></Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n          \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Balance","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\nimport JumboTron from './components/JumboTron';\nimport Keypad from './components/Keypad';\nimport Profile from './components/Profile';\nimport Header from './components/Header';\nimport NavbarPage from './components/NavbarPage';\nimport Login from './components/Login';\nimport Balance from './components/Balance';\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       \n          {/*<Login/>*/}\n      \n\n      <Balance />\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}